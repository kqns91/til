openapi: 3.0.2
info:
  title: Pet store schema
  version: 1.0.0
servers:
- url: /v3
tags:
- description: Everything about your Pets
  name: pet
paths:
  /pet:
    post:
      description: Add a new pet to the store
      operationId: addPet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        description: Create a new pet in the store
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: Successful operation
      summary: Add a new pet to the store
      tags:
      - pet
  /pet/{petId}:
    delete:
      description: ""
      operationId: deletePet
      parameters:
      - description: Pet id to delete
        explode: false
        in: path
        name: petId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          description: successful operation
      summary: Deletes a pet
      tags:
      - pet
    get:
      description: Returns a single pet
      operationId: getPetById
      parameters:
      - description: ID of pet to return
        explode: false
        in: path
        name: petId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: successful operation
        "404":
          description: Pet not found
      summary: Find pet by ID
      tags:
      - pet
    post:
      description: ""
      operationId: updatePet
      parameters:
      - description: ID of pet that needs to be updated
        explode: false
        in: path
        name: petId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Name of pet that needs to be updated
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Status of pet that needs to be updated
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/PetStatus'
        style: form
      responses:
        "200":
          description: successful operation
      summary: Updates a pet in the store
      tags:
      - pet
components:
  requestBodies:
    Pet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
      description: Pet object that needs to be added to the store
  schemas:
    PetStatus:
      description: pet status in the store
      enum:
      - available
      - pending
      - sold
      type: string
    Pet:
      example:
        photoUrls:
        - photoUrls
        - photoUrls
        name: doggie
        id: 10
        status: null
      properties:
        id:
          example: 10
          format: int64
          type: integer
        name:
          example: doggie
          type: string
        photoUrls:
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/PetStatus'
      required:
      - name
      type: object
